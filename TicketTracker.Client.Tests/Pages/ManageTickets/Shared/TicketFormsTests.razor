@using Microsoft.AspNetCore.Components.Forms;

@inherits TestContext

@code{
    [Fact]
    public void TicketFormComponent_ShouldDisplayFormSections()
    {
        // Arrange
        var cut = RenderComponent<TicketForm>();

        // Act
        var ticketNumberFieldSet = cut.Find("[for='ticketNumber']").ParentElement;
        var nitFieldSet = cut.Find("[for='nit']").ParentElement;
        var descriptionFieldSet = cut.Find("[for='description']").ParentElement;
        var amountFieldSet = cut.Find("[for='amount']").ParentElement;
        var imageFieldSet = cut.Find("[for='image']").ParentElement;

        // Assert
        Assert.Contains("Details and amount", cut.Markup);
        Assert.Contains("Ticket Number", ticketNumberFieldSet.InnerHtml);
        Assert.Contains("Nit", nitFieldSet.InnerHtml);
        Assert.Contains("Description", descriptionFieldSet.InnerHtml);
        Assert.Contains("Amount", amountFieldSet.InnerHtml);
        Assert.Contains("Image", imageFieldSet.InnerHtml);
    }

    [Fact]
    public void TicketFormComponent_ResetsAllFields()
    {
        // Arrange
        var component = RenderComponent<TicketForm>();

        component.Find("#ticketNumber").Change("1");
        component.Find("#nit").Change("12345");
        component.Find("#description").Change("Test Description");
        component.Find("#amount").Change("100.5");

        // Act
        component.Find("button").Click();

        // Assert
        var ticketNumber = component.Find("#ticketNumber").GetAttribute("value");
        var nit = component.Find("#nit").GetAttribute("value");
        var description = component.Find("#description").GetAttribute("value");
        var amount = component.Find("#amount").GetAttribute("value");

        Assert.Null(ticketNumber);
        Assert.Null(nit);
        Assert.Null(description);
        Assert.Null(amount);
    }
}